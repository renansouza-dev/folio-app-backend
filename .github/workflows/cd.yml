name: Java CD with Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Set Release version env variable
        run: echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | sed 's/-SNAPSHOT//')" >> $GITHUB_ENV

      - uses: actions/checkout@v4.1.1

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml -ntp

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5.1.0
        with:
          context: .
          push: true
          file: ./Dockerfile
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ env.RELEASE_VERSION }}

  deploy:
    needs: build-and-push
    name: Deploy to EC2
    runs-on: ubuntu-latest
    environment: development

    steps:
      - uses: actions/checkout@v4.1.1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Download task definition
        run: aws ecs describe-task-definition --task-definition folio-task --query taskDefinition

      - name: Fill in the new image ID in the Amazon ECS task definition
        uses: aws-actions/amazon-ecs-render-task-definition@v1.2.0
        with:
          task-definition: task-definition.json
          container-name: folio-app-backend
          image: ghcr.io/${{ github.repository }}:latest

      - name: Run Task on Amazon ECS
        uses: smitp/amazon-ecs-run-task@v1
        with:
          task-definition: task-definition.json
          cluster: my-cluster
          count: 1
          started-by: github-actions-${{ github.actor }}
          wait-for-finish: true
